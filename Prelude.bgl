--
-- BoGL general definitions
--


-- Game types
--
type Player = {A,B}
type State = (Board,Player)


-- Players
--
goFirst : Player
goFirst = A

next : Player -> Player
next(p) = if p == A then B else A


-- Initial board and board operations
--
initialBoard : Board
initialBoard(x,y) = Empty

isValid : (Board,Position) -> Bool
isValid(b,p) = if b!p == Empty then True else False

isFull : Board -> Bool
isFull(b) = countBoard(Empty,b) == 0


-- Game state operations
--
tryMove : State -> State
tryMove(b,p) = let pos = input in
                   if isValid(b,pos) then (place(p,b,pos),next(p))
                                     else (b,p)
